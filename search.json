[{"path":"https://ivanwilli.github.io/DemoKin/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 DemoKin authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"kin-counts-with-time-invariant-rates","dir":"Articles","previous_headings":"","what":"1. Kin counts with time-invariant rates","title":"Expected kin counts by type of relative in a one-sex framework","text":"First, compute kin counts time-invariant framework. assume Focal relatives experience 2015 mortality fertility rates throughout entire lives (Caswell 2019). DemoKin package includes data Sweden example: age--year matrices survival probabilities (swe_px), survival ratios (swe_Sx), fertility rates (swe_asfr), population numbers (swe_pop). can see data contained DemoKin data(package=\"DemoKin\"). data comes Human Mortality Database Human Fertility Database (see ?DemoKin::get_HMDHFD). order implement time-invariant models, function DemoKin::kin expects vector survival ratios another vector fertility rates. example, get data year 2015, run matrix models:","code":"pkgload::load_all() library(tidyr) library(dplyr) library(ggplot2) library(knitr) # First, get vectors for a given year swe_surv_2015 <- swe_px[,\"2015\"] swe_asfr_2015 <- swe_asfr[,\"2015\"] # Run kinship models swe_2015 <- kin(p = swe_surv_2015, f = swe_asfr_2015, time_invariant = TRUE)"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"value","dir":"Articles","previous_headings":"1. Kin counts with time-invariant rates","what":"1.1. Value","title":"Expected kin counts by type of relative in a one-sex framework","text":"DemoKin::kin() returns list containing two data frames: kin_full kin_summary. kin_full contains expected kin counts year (cohort), age Focal age kin. Note columns year cohort empty argument time_invariant = TRUE kin (example). kin_summary ‘summary’ data frame derived kin_full. produce , sum ages kin produce data frame expected kin counts year cohort age Focal (age kin). Consider simplified example living kin counts:","code":"head(swe_2015$kin_full) ## # A tibble: 6 × 7 ##   kin   age_kin age_focal living  dead cohort year  ##   <chr>   <int>     <int>  <dbl> <dbl> <lgl>  <lgl> ## 1 d           0         0      0     0 NA     NA    ## 2 d           0         1      0     0 NA     NA    ## 3 d           0         2      0     0 NA     NA    ## 4 d           0         3      0     0 NA     NA    ## 5 d           0         4      0     0 NA     NA    ## 6 d           0         5      0     0 NA     NA head(swe_2015$kin_summary) ## # A tibble: 6 × 10 ##   age_focal kin   year  cohort count_living mean_age sd_age count_dead ##       <int> <chr> <lgl> <lgl>         <dbl>    <dbl>  <dbl>      <dbl> ## 1         0 coa   NA    NA           0.275      8.32   6.14  0.0000633 ## 2         0 cya   NA    NA           0.0898     4.05   3.68  0.0000370 ## 3         0 d     NA    NA           0        NaN    NaN     0         ## 4         0 gd    NA    NA           0        NaN    NaN     0         ## 5         0 ggd   NA    NA           0        NaN    NaN     0         ## 6         0 ggm   NA    NA           0.320     84.4    6.43  0.0287    ## # ℹ 2 more variables: count_cum_dead <dbl>, mean_age_lost <dbl> kin_summary_example <-    swe_2015$kin_full %>%    select(year, cohort, kin, age_focal, age_kin, living, dead) %>%    group_by(year, cohort, kin, age_focal) %>%    summarise(count_living = sum(living))   head(kin_summary_example) ## # A tibble: 6 × 5 ## # Groups:   year, cohort, kin [1] ##   year  cohort kin   age_focal count_living ##   <lgl> <lgl>  <chr>     <int>        <dbl> ## 1 NA    NA     coa           0        0.275 ## 2 NA    NA     coa           1        0.291 ## 3 NA    NA     coa           2        0.305 ## 4 NA    NA     coa           3        0.318 ## 5 NA    NA     coa           4        0.330 ## 6 NA    NA     coa           5        0.341"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"visualizing-the-distribution-of-kin","dir":"Articles","previous_headings":"1. Kin counts with time-invariant rates","what":"1.2. Visualizing the distribution of kin","title":"Expected kin counts by type of relative in a one-sex framework","text":"Let us now visualize distribution relatives Focal’s lifecourse using summary data.frame kin_summary:  , relative type identified unique code. Note DemoKin uses different codes Caswell (2019); equivalence two set codes given following table: can also visualize age distribution relatives Focal 35 years old (now, full names identify relative type using function DemoKin::rename_kin()):  one-sex model implemented DemoKin assumes given fertility input applies sexes. Note , using survival rates (SxS_x) instead probabilities (pxp_x), fertility vectors account female person-year exposure, using: (fx+fx+1Sx2)L0l0(\\frac{f_x+f_{x+1}S_x}{2})\\frac{L_0}{l_0} instead fxfx; see Preston et.al (2001)). kin function also includes summary output count living kin, mean standard deviation kin age, type kin, Focal’s age: Finally, can visualize estimated kin counts type kin using network diagram. Following age 35:","code":"swe_2015[[\"kin_summary\"]] %>%   ggplot() +   geom_line(aes(age_focal, count_living)) +   theme_bw() +   labs(y = \"Expected number of living relatives\") +   facet_wrap(~kin) swe_2015[[\"kin_full\"]] %>%   filter(age_focal == 35) %>%    ggplot() +   geom_line(aes(age_kin, living))  +   geom_vline(xintercept = 35, color=2) +   labs(y = \"Expected number of living relatives\") +   theme_bw() +   facet_wrap(~kin) swe_2015[[\"kin_summary\"]] %>%    filter(age_focal == 35) %>%    select(kin, count_living, mean_age, sd_age) %>%    mutate_if(is.numeric, round, 2) %>%    kable() swe_2015[[\"kin_summary\"]] %>%    filter(age_focal == 35) %>%    select(kin, count = count_living) %>%    plot_diagram(rounding = 2)"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"kin-counts-with-time-variant-rates","dir":"Articles","previous_headings":"","what":"2. Kin counts with time-variant rates","title":"Expected kin counts by type of relative in a one-sex framework","text":"demography Sweden , reality, changing every year. means Focal relatives experienced changing mortality fertility rates time. account , using time-variant models introduced Caswell Song (2021). Let’s take look resulting kin counts Focal born 1960, limiting output relative types given argument output_kin:","code":"swe_time_varying <-    kin(     p = swe_px,     f = swe_asfr,     n = swe_pop,     time_invariant =FALSE,     output_cohort = 1960,     output_kin = c(\"d\",\"gd\",\"ggd\",\"m\",\"gm\",\"ggm\")     ) ## Preparing output... ## Assuming stable population before 1900. swe_time_varying$kin_summary %>%   ggplot(aes(age_focal,count_living,color=factor(cohort))) +   scale_y_continuous(name = \"\",labels = seq(0,3,.2),breaks = seq(0,3,.2))+   geom_line(color = 1)+   geom_vline(xintercept = 35, color=2)+   labs(y = \"Expected number of living relatives\") +   facet_wrap(~kin,scales = \"free\")+   theme_bw()"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"kin-deaths","dir":"Articles","previous_headings":"","what":"3. Kin deaths","title":"Expected kin counts by type of relative in a one-sex framework","text":"Kin loss can severe consequences bereaved relatives. can also affect provision care support intergenerational transfers life course. function kin also includes information number relatives lost Focal life, stored column count_cum_death:  Given population-level measures, can compute Focal’s mean age time relative’s death. Focal aged 50 yo:","code":"swe_time_varying$kin_summary %>%   ggplot() +   geom_line(aes(age_focal, count_cum_dead)) +   labs(y = \"Expected number of deceased relatives\") +   theme_bw() +   facet_wrap(~kin,scales=\"free\") swe_time_varying$kin_summary %>%    filter(age_focal == 50) %>%    select(kin,count_cum_dead,mean_age_lost) %>%    mutate_if(is.numeric, round, 2) %>%    kable()"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"prevalences","dir":"Articles","previous_headings":"","what":"4. Prevalences","title":"Expected kin counts by type of relative in a one-sex framework","text":"Given distribution kin age, can compute expected portion living kin stage given set prevalences age (e.g., disease, employment, etc.). known Sullivan Method life-table literature. matrix formulation results can found Caswell (2019), can also extended time-variant framework.","code":"# let´s create some prevalence by age swe_2015_prevalence <-    tibble(     age_kin = unique(swe_2015$kin_full$age_kin),     prev = .005 * exp(.05 * age_kin)     ) # join to kin count estimates and plot swe_2015$kin_full %>%    left_join(swe_2015_prevalence) %>%    group_by(kin, age_focal) %>%    summarise(     prevalent = sum(living * prev),     no_prevalent = sum(living * (1-prev))     ) %>%    pivot_longer(cols = prevalent:no_prevalent, names_to = \"prevalence_state\", values_to = \"count\") %>%    ggplot(aes(x=age_focal, y = count)) +    geom_area(aes(fill=prevalence_state)) +   facet_wrap(~kin) +   theme_bw()"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_OneSex.html","id":"multi-state-models","dir":"Articles","previous_headings":"","what":"5. Multi-state models","title":"Expected kin counts by type of relative in a one-sex framework","text":"DemoKin allows computation kin structures multi-state framework, classifying individuals jointly age feature (e.g., stages disease). , need mortality fertility data possible stage probabilities changing state age. Let’s consider example Slovakia given Caswell (2021), stages parity states. DemoKin includes data replicate analysis year 1980: data.frame svk_fxs fertility rate age (rows) parity stage (columns). first stage represents parity=0parity=0; second stage, parity=1parity=1; , finally sixth stage represents parity≥5parity\\geq5. data.frame svk_Hxs similar structure 11’s ages corresponding newborns (first age example). data.frame svk_pxs structure represents survival probabilities. list svk_Uxs number elements ages (case 110, omegaomega 109). age, contains column-stochastic transition matrix dimension state space. entries transition probabilities conditional survival. Following Caswell (2020), can obtain joint age-parity kin structure: Note function ask risks already certain matrix format. example, consider age-parity distribution aunts, Focal 20 60 yo (equivalent Figure 4 Caswell (2021)).  can also see portion living daughters mothers different parity stages Focal’s life-course (equivalent Figure 9 10 Caswell (2021)).  function kin_multi_stage can generalized kind state (sure set parameter parity = FALSE, de default).","code":"# use birth_female=1 because fertility is for female only demokin_svk1980_caswell2020 <-    kin_multi_stage(     U = svk_Uxs,     f = svk_fxs,     D = svk_pxs,     H = svk_Hxs,      birth_female=1,     parity = TRUE) demokin_svk1980_caswell2020 %>%    filter(kin %in% c(\"oa\",\"ya\"), age_focal %in% c(20,60)) %>%    mutate(parity = as.integer(stage_kin)-1,          parity = case_when(parity == 5 ~ \"5+\", T ~ as.character(parity))          ) %>%    group_by(age_focal, age_kin, parity) %>%    summarise(count= sum(living)) %>%    ggplot() +   geom_bar(aes(x=age_kin, y = count, fill=parity), stat = \"identity\") +   geom_vline(aes(xintercept = age_focal), col=2) +   labs(y = \"Number of aunts\") +   theme_bw() +   facet_wrap(~age_focal, nrow = 2) demokin_svk1980_caswell2020 %>%    filter(kin %in% c(\"d\",\"m\")) %>%    mutate(parity = as.integer(stage_kin)-1,          parity = case_when(parity == 5 ~ \"5+\", T ~ as.character(parity))) %>%    group_by(age_focal, kin, parity) %>%    summarise(count= sum(living)) %>%    DemoKin::rename_kin() %>%    ggplot() +   geom_bar(aes(x=age_focal, y = count, fill=parity), stat = \"identity\") +   labs(y = \"Kin count\") +   theme_bw() +   facet_wrap(~kin, nrow = 2)"},{"path":[]},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex.html","id":"demographic-rates-by-sex","dir":"Articles","previous_headings":"","what":"1. Demographic rates by sex","title":"Two-sex kinship model","text":"Data female fertility age less common female fertility. Schoumaker (2019) shows male TFR almost always higher female Total Fertility Rates (TFR) using sample 160 countries. example, use data 2012 France exemplify use two-sex function. Data female male fertility mortality included DemoKin. population, male female TFR almost identical (1.98 1.99) distributions fertility sex varies age:","code":"data(fra_asfr_sex, package = \"DemoKin\") data(fra_surv_sex, package = \"DemoKin\") fra_fert_f <- fra_asfr_sex[,\"ff\"] fra_fert_m <- fra_asfr_sex[,\"fm\"] fra_surv_f <- fra_surv_sex[,\"pf\"] fra_surv_m <- fra_surv_sex[,\"pm\"]  sum(fra_fert_m)-sum(fra_fert_f) #> [1] -0.0115  data.frame(value = c(fra_fert_f, fra_fert_m, fra_surv_f, fra_surv_m),            age = rep(0:100, 4),            sex = rep(c(rep(\"f\", 101), rep(\"m\", 101)), 2),            risk = c(rep(\"fertility rate\", 101 * 2), rep(\"survival probability\", 101 * 2))) %>%   ggplot(aes(age, value, col=sex)) +    geom_line() +    facet_wrap(~ risk, scales = \"free_y\") +    theme_bw()"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex.html","id":"time-invariant-two-sex-kinship-models","dir":"Articles","previous_headings":"","what":"2. Time-invariant two-sex kinship models","title":"Two-sex kinship model","text":"now introduce functions kin2sex, similar one-sex function kin (see ?kin) two exceptions. First, user needs specify mortality fertility sex. Second, user must indicate sex Focal (assumed female one-sex model). Let us first consider application time-invariant populations: output kin2sex equivalent kin, except includes column sex_kin specify sex given relatives. Let’s group aunts siblings visualize number living kin Focal’s age.  note terminology function kin2sex uses codes kin identify relatives (see demokin_codes()). Note running two-sex model, code ‘m’ refers either mothers fathers! Use column sex_kin determine sex given relatives. example, order consider sons ignore daughters, use: Information kin availability sex allows us consider sex ratios, traditional measure demography, females often denominator. following figure, example, shows 25yo French woman hypothetical population can expect 0.5 grandfathers every grandmother:  experience kin loss Focal depends differences mortality sexes. female Focal starts losing fathers earlier mothers. see slightly different pattern grandparents since Focal’s experience grandparental loss dependent initial availability grandparents (.e. Focal’s grandparent died birth, never experience death).","code":"kin_result <- kin2sex(   pf = fra_surv_f,   pm = fra_surv_m,    ff = fra_fert_f,    fm = fra_fert_m,    time_invariant = TRUE,   sex_focal = \"f\",    birth_female = .5   ) kin_out <- kin_result$kin_summary %>%    mutate(kin = case_when(kin %in% c(\"s\", \"s\") ~ \"s\",                          kin %in% c(\"ya\", \"oa\") ~ \"a\",                          T ~ kin)) %>%   filter(kin %in% c(\"d\", \"m\", \"gm\", \"ggm\", \"s\", \"a\"))  kin_out %>%    group_by(kin, age_focal, sex_kin) %>%   summarise(count=sum(count_living)) %>%   ggplot(aes(age_focal, count, fill=sex_kin))+   geom_area()+   theme_bw() +   facet_wrap(~kin) kin_result$kin_summary %>%    filter(kin == \"d\", sex_kin == \"m\") %>%    head() #> # A tibble: 6 × 11 #>   age_focal kin   sex_kin year  cohort count_living mean_age sd_age count_dead #>       <int> <chr> <chr>   <lgl> <lgl>         <dbl>    <dbl>  <dbl>      <dbl> #> 1         0 d     m       NA    NA                0      NaN    NaN          0 #> 2         1 d     m       NA    NA                0      NaN    NaN          0 #> 3         2 d     m       NA    NA                0      NaN    NaN          0 #> 4         3 d     m       NA    NA                0      NaN    NaN          0 #> 5         4 d     m       NA    NA                0      NaN    NaN          0 #> 6         5 d     m       NA    NA                0      NaN    NaN          0 #> # ℹ 2 more variables: count_cum_dead <dbl>, mean_age_lost <dbl> kin_out %>%    group_by(kin, age_focal) %>%   summarise(sex_ratio=sum(count_living[sex_kin==\"m\"], na.rm=T)/sum(count_living[sex_kin==\"f\"], na.rm=T)) %>%   ggplot(aes(age_focal, sex_ratio))+   geom_line()+   theme_bw() +   facet_wrap(~kin, scales = \"free\") # sex ratio kin_out %>%   group_by(kin, sex_kin, age_focal) %>%   summarise(count=sum(count_dead)) %>%   ggplot(aes(age_focal, count, col=sex_kin))+   geom_line()+   theme_bw() +   facet_wrap(~kin)"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex.html","id":"time-variant-two-sex-kinship-models","dir":"Articles","previous_headings":"","what":"3. Time-variant two-sex kinship models","title":"Two-sex kinship model","text":"look populations demographic rates static change yearly basis. , consider case Sweden using data pre-loaded DemoKin. example, create ‘pretend’ male fertility rates slightly perturbing existing female rates. toy example, since real two-sex model use actual female male rates inputs. looks year 1900:  now run time-variant two-sex models (note time_invariant = FALSE argument): can plot data kin availability alongside values coming time-invariant model show demographic change matters: time-variant models take account changes derived demographic transition, whereas time-invariant models assume never-changing rates.","code":"years <- ncol(swe_px) ages <- nrow(swe_px) swe_surv_f_matrix <- swe_px swe_surv_m_matrix <- swe_px ^ 1.5 # artificial perturbation for this example swe_fert_f_matrix <- swe_asfr swe_fert_m_matrix <- rbind(matrix(0, 5, years),               swe_asfr[-((ages-4):ages),]) * 1.05 # artificial perturbation for this example bind_rows(   data.frame(age = 0:100, sex = \"Female\", component = \"Fertility rate\", value = swe_fert_f_matrix[,\"1900\"]),   data.frame(age = 0:100, sex = \"Male\", component = \"Fertility rate\", value = swe_fert_m_matrix[,\"1900\"]),   data.frame(age = 0:100, sex = \"Female\", component = \"Survival probability\", value = swe_surv_f_matrix[,\"1900\"]),   data.frame(age = 0:100, sex = \"Male\", component = \"Survival probability\", value = swe_surv_m_matrix[,\"1900\"])) %>%    ggplot(aes(age, value, col = sex)) +   geom_line() +   theme_bw() +   facet_wrap(~component, scales = \"free\") kin_out_time_variant <- kin2sex(                       pf = swe_surv_f_matrix,                        pm = swe_surv_m_matrix,                       ff = swe_fert_f_matrix,                        fm = swe_fert_m_matrix,                       sex_focal = \"f\",                       time_invariant = FALSE,                       birth_female = .5,                       output_cohort = 1900                       ) #>  Preparing output... #> Assuming stable population before 1900. kin_out_time_invariant <- kin2sex(                       swe_surv_f_matrix[,\"1900\"], swe_surv_m_matrix[,\"1900\"],                        swe_fert_f_matrix[,\"1900\"], swe_fert_m_matrix[,\"1900\"],                        sex_focal = \"f\", birth_female = .5)   kin_out_time_variant$kin_summary %>%   filter(cohort == 1900) %>% mutate(type = \"variant\") %>%   bind_rows(kin_out_time_invariant$kin_summary %>% mutate(type = \"invariant\")) %>%    mutate(kin = case_when(kin %in% c(\"ys\", \"os\") ~ \"s\",                          kin %in% c(\"ya\", \"oa\") ~ \"a\",                          T ~ kin)) %>%   filter(kin %in% c(\"d\", \"m\", \"gm\", \"ggm\", \"s\", \"a\")) %>%   group_by(type, kin, age_focal, sex_kin) %>%   summarise(count=sum(count_living)) %>%   ggplot(aes(age_focal, count, linetype=type))+   geom_line()+ theme_bw() +   facet_grid(cols = vars(kin), rows=vars(sex_kin), scales = \"free\")"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex.html","id":"approximations","dir":"Articles","previous_headings":"","what":"4. Approximations","title":"Two-sex kinship model","text":"Caswell (2022) introduced two approaches approximating two-sex kinship structures cases male demographic rates available. first androgynous approximation, assumes equal fertility survival males females. second use GKP factors apply type relative (e.g., multiplying mothers two obtain number mothers fathers). , present visual evaluation accuracy approximations comparing ‘true’ two-sex models using French data included DemoKin time-invariant models (Caswell 2022). start considering androgynous approximation. compare expected kin counts age find high levels consistency kin types, except grandfathers great-grandfathers:  Next, consider use GKP factors find also approximates relatively accurately kin counts different ages Focal. presented examples . Users invited perform rigorous comparisons approximations.","code":"kin_out <- kin2sex(fra_surv_f, fra_surv_m, fra_fert_f, fra_fert_m, sex_focal = \"f\", birth_female = .5)  kin_out_androgynous <- kin2sex(fra_surv_f, fra_surv_f, fra_fert_f, fra_fert_f, sex_focal = \"f\", birth_female = .5)  bind_rows(   kin_out$kin_summary %>% mutate(type = \"full\"),   kin_out_androgynous$kin_summary %>% mutate(type = \"androgynous\")) %>%   group_by(kin, age_focal, sex_kin, type) %>%   summarise(count = sum(count_living)) %>%   ggplot(aes(age_focal, count, linetype = type)) +   geom_line() +   theme_bw() +   theme(legend.position = \"bottom\", axis.text.x = element_blank()) +   facet_grid(row = vars(sex_kin), col = vars(kin), scales = \"free\") # with gkp kin_out_1sex <- kin(fra_surv_f, fra_fert_f, birth_female = .5)  kin_out_GKP <- kin_out_1sex$kin_summary%>%   mutate(count_living = case_when(kin == \"m\" ~ count_living * 2,                             kin == \"gm\" ~ count_living * 4,                             kin == \"ggm\" ~ count_living * 8,                             kin == \"d\" ~ count_living * 2,                             kin == \"gd\" ~ count_living * 4,                             kin == \"ggd\" ~ count_living * 4,                             kin == \"oa\" ~ count_living * 4,                             kin == \"ya\" ~ count_living * 4,                             kin == \"os\" ~ count_living * 2,                             kin == \"ys\" ~ count_living * 2,                             kin == \"coa\" ~ count_living * 8,                             kin == \"cya\" ~ count_living * 8,                             kin == \"nos\" ~ count_living * 4,                             kin == \"nys\" ~ count_living * 4))  bind_rows(   kin_out$kin_summary %>% mutate(type = \"full\"),   kin_out_androgynous$kin_summary %>% mutate(type = \"androgynous\"),   kin_out_GKP %>% mutate(type = \"gkp\")) %>%   mutate(kin = case_when(kin %in% c(\"ys\", \"os\") ~ \"s\",                           kin %in% c(\"ya\", \"oa\") ~ \"a\",                           kin %in% c(\"coa\", \"cya\") ~ \"c\",                           kin %in% c(\"nys\", \"nos\") ~ \"n\",                           T ~ kin)) %>%   filter(age_focal %in% c(5, 15, 30, 60, 80)) %>%   group_by(kin, age_focal, type) %>%   summarise(count = sum(count_living)) %>%   ggplot(aes(type, count)) +   geom_bar(aes(fill=type), stat = \"identity\") +   theme_bw()+theme(axis.text.x = element_text(angle = 90), legend.position = \"bottom\")+   facet_grid(col = vars(kin), row = vars(age_focal), scales = \"free\")"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex.html","id":"causes-of-death","dir":"Articles","previous_headings":"","what":"2. Causes of death","title":"Two-sex kinship model","text":"Now assume two causes death (COD). females, risk first COD half risk second COD ages greater 50. males, risk first COD 2/3 second COD ages greater 50. operationalize using two matrices dimension 2 101 (number causes number ages). generalization approach outlined Caswell (2023). original formulation, inputs matrix HH hazard rates. , treat like relative risk factor related underlying probability dying. details, see section 2.3 formula 30 section .1 Caswell (2023). Now run time-invariant two-sex model COD France 2012, assuming death count distribution based two competing causes; note kin2sex function now takes arguments Hf Hm arguments remain unchanged: output kin2sex kin_full data frame encountered . differences kin_full now includes one column COD specified input. Therefore, number columns vary depending many COD considering! can now plot death distribution age COD Focal’s parents Focal 30 yo.  simplified example, parents Focal died age 50. helped highlight relative difference COD sex. Note sum death counts sex gives result total deaths sex age less complex model (.e., one consider COD, see section 2 guide). can add many COD want, keep mind can computationally intensive. time-variant kinship models consider COD, must provide list matrices sex (HfHf HmHm). elements list HH matrices year (following order mortality fertility components).","code":"Hf <- matrix(c( .5, 1), nrow = 2, ncol = length(fra_surv_f)) Hm <- matrix(c(.33, 1), nrow = 2, ncol = length(fra_surv_f)) Hf[,1:50] <- Hm[,1:50] <- 1 kin_out_cod_invariant <- kin2sex(                       pf = fra_surv_f,                       pm = fra_surv_m,                        ff = fra_fert_f,                        fm = fra_fert_m,                       Hf = Hf,                       Hm = Hm,                       time_invariant = TRUE) head(kin_out_cod_invariant) #> # A tibble: 6 × 9 #>   year  cohort age_focal sex_kin kin   age_kin living deadcause1 deadcause2 #>   <lgl> <lgl>      <int> <chr>   <chr>   <int>  <dbl>      <dbl>      <dbl> #> 1 NA    NA             0 f       d           0      0          0          0 #> 2 NA    NA             1 f       d           0      0          0          0 #> 3 NA    NA             2 f       d           0      0          0          0 #> 4 NA    NA             3 f       d           0      0          0          0 #> 5 NA    NA             4 f       d           0      0          0          0 #> 6 NA    NA             5 f       d           0      0          0          0 kin_out_cod_invariant %>%    filter(kin == \"m\", age_focal == 30) %>%    summarise(deadcause1 = sum(deadcause1),             deadcause2 = sum(deadcause2), .by = c(age_kin, sex_kin)) %>%   pivot_longer(deadcause1:deadcause2) %>%    ggplot(aes(age_kin, value, col = sex_kin, linetype = name)) +   geom_line() +    labs(y = \"Expected number of parental deaths\") +   theme_bw()"},{"path":[]},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"kin-counts-by-parity","dir":"Articles","previous_headings":"","what":"Kin counts by parity","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"example use parity example stage. UK data ranging 1965 - 2022 sourced Human Mortality Database Office National Statistics. simplifying assumptions make due data availability follows: Fertility rates vary time, distinct among parity class, sexes (-called ``androgynous approximation’’). Mortality rates vary time, distinct across sex, parity classes (parity-specific mortality) age-specific probabilities parity-progression vary time, sex (androgynous approximation ) order implement model, function kin_multi_stage_time_variant_2sex expects following 7 inputs vital rates, fed lists: U_list_females list female age--parity specific survival probabilities timescale (matrix forms). input list length = timescale, entry represents rates specific period matrix form: stage columns, age rows. U_list_males list male age--parity specific survival probabilities timescale (matrix forms). input list length = timescale, entry represents rates specific period matrix form: stage columns, age rows. F_list_females list female age--parity specific fertility rates timescale (matrix forms). input list length = timescale, entry represents rates specific period matrix form: stage columns, age rows. F_list_males list male age--parity specific fertility rates timescale (matrix forms). input list length = timescale, entry represents rates specific period matrix form: stage columns, age rows. T_list_females list lists female age-specific probabilities moving parity timescale (matrix forms). outer list length = timescale. inner list length = number ages. outer list entry comprised list matrices (stage*stage dimensional), matrix describes age-specific probabilities moving stage. Thus year, list age-specific probabilities moving one stage next. 5) males H_list list length = timescale, element matrix assigns offspring individuals stage appropriate age class (age rows states columns) avoid need tedious calculations put data format vignette, lists constructed another file simply imported . code reads function input lists. Recap: lists period-specific demographic rates, particular comprising: U_mat_fem: list age stage matrices, entries give female probability survival. List starting 1965 ending 2022. U_mat_male: list age stage matrices, entries give female probability survival. List starting 1965 ending 2022. F_mat_fem: list age stage matrices, entries give female fert, List starting 1965 ending 2022. F_mat_male == F_mat_fem. T_mat_fem: list lists matrices: outer list entry list matrices matrix gives age-specific probabilities female moves parity (inner list length number age-classes). Outer list starting 1965 ending 2022 T_mat_male == T_mat_fem. H_mat: list matrices redistributes newborns age-class 1 parity 0. time-variation.","code":"F_mat_fem <- Female_parity_fert_list_UK F_mat_male <- Female_parity_fert_list_UK T_mat_fem <- Parity_transfers_by_age_list_UK T_mat_male <- Parity_transfers_by_age_list_UK U_mat_fem <- Female_parity_mortality_list_UK U_mat_male <- Male_parity_mortality_list_UK H_mat <- Redistribution_by_parity_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"accumulated-number-of-kin-focal-expects-over-the-lifecourse-under-time-varying-rates-from-1965-to-2005","dir":"Articles","previous_headings":"","what":"1. Accumulated number of kin Focal expects over the lifecourse under time-varying rates from 1965 to 2005","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"feed inputs matrix model, along arguments: UK sex ratio –> birth_female = 0.49 considering parity –> parity = TRUE want Focal’s kin network –> output_kin = c(“d”, “oa”, “ys”, “os”) Accumulated kin example –> summary_kin = TRUE Focal female –> sex_Focal = “Female” Focal born parity 0 –> initial_stage_Focal = 1 timescale ouptut – > output_years = c(1965, 1975, 1985, 1995, 2005) Accumulated kin outputted argument summary_kin = TRUE. cases, age Focal, sum possible ages kin yielding marginal stage distribution kin. first sets time-varying vital rates input lists e.g., U_mat_fem[[1]] (corresponding mortality 1965), 41-st entry U_mat_fem[[(1+40)]] (mortality 2005). require consistency length list vital rates timescale: U_mat_fem[[1:(1+40)]] = length = seq(1965,2005). Therefore use input lists demographic rates U_list_females = U_mat_fem[1:(1+no_years)] runs U_mat_fem[[1]] = 1965 set rates, U_mat_fem[[41]] = 2005 set rates, … run takes time (round 10 min) don´t include output vignette. Please try !","code":"# Run kinship model for a female Focal over a timescale of no_years (we use 40 here) no_years <- 40 # and we start projecting kin in 1965 # We decide here to count accumulated kin by age of Focal, and not distributions of kin kin_out_1965_2005 <-   kin_multi_stage_time_variant_2sex(U_list_females = U_mat_fem[1:(1+no_years)],                                     U_list_males = U_mat_male[1:(1+no_years)],                                     F_list_females = F_mat_fem[1:(1+no_years)],                                     F_list_males = F_mat_male[1:(1+no_years)],                                     T_list_females = T_mat_fem[1:(1+no_years)],                                     T_list_males = T_mat_fem[1:(1+no_years)],                                     H_list = H_mat[1:(1+no_years)],                                     birth_female = 1 - 0.51, ## Sex ratio -- UK value                                     parity = TRUE,                                     output_kin = c(\"d\", \"oa\", \"ys\", \"os\"),                                     summary_kin = TRUE,                                     sex_Focal = \"Female\", ##  define Focal's sex at birth                                     initial_stage_Focal = 1, ## Define Focal's stage at birth                                     output_years = c(1965, 1975, 1985, 1995, 2005) ## the sequence of years we run the function over )"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"visualizing-the-output","dir":"Articles","previous_headings":"","what":"1.1. Visualizing the output","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"Notice structure output data. columns age_focal kin_stage sum ages kin, produce marginal stage distribution given age Focal. column corresponding sex kin sex_kin, column showing year considering, column headed group selects kin type. Finally, columns showing Focal’s cohort birth cohort (e.g., year - age Focal), .factor() equivalent.","code":"head(kin_out_1965_2005$kin_summary)"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"plotting-kin-for-an-average-focal-at-some-fixed-period-in-time","dir":"Articles","previous_headings":"","what":"1.1.1. Plotting kin for an average Focal at some fixed period in time","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"Let’s suppose really want understand age*parity distributions accumulated number aunts uncles older Focal’s mother father, age Focal, years 1965, 1975, 1985, 1995, 2005. people …. restrict Focal’s kinship network aunts uncles older Focal’s mother group == “oa”. visualise marginal parity distributions kin: stage_kin, age Focal age_focal, using different colour schemes. Implicit plot really plot Focal’s born different cohort – .e., 2005 panel show 50 year old Focal born 1955, 40 year old Focal born 1965. also consider kin Focal’s network, instance, offspring using group == “d”","code":"kin_out_1965_2005$kin_summary %>%   dplyr::filter(group == \"oa\") %>%   ggplot2::ggplot(ggplot2::aes(x = age_focal, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ year) +   ggplot2::scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"Older aunts and uncles\") kin_out_1965_2005$kin_summary %>%   dplyr::filter(group == \"d\") %>%   ggplot2::ggplot(ggplot2::aes(x = age_focal, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ year) +   ggplot2::scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"Offspring\")"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"plotting-the-kin-of-focal-as-a-function-of-focals-cohort-of-birth","dir":"Articles","previous_headings":"","what":"1.1.2. Plotting the kin of Focal as a function of Focal’s cohort of birth","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"Since ran model 40 years (1965-2005), little scope view kinship cohort-specific. can however compare cohorts 40-year segments Focal’s life. , following example, consider offspring show Focals born cohort 1910, 1925, 1965: LHS plot (1910 cohort) interpreted follows: Focal born 1910, 1965-2005 /55-95 years old. Focal already accumulated maximal number offspring, overall number now dropping mortality risk begins. offspring Focal approximately 20-35, began completed reproduction/parity progression. middle plot (1925 cohort) shows Focal ages 40 80. , Focal completed reproduction can lose offspring /ages. However, Offspring Focal age 40 around 10-20 still high probability parity 0. Whereas, Focal age 80 offspring aged around 50, turn completed reproduction demonstrated well mixed parity-distribution age Focal. RHS plot (1965 cohort) simply reflects fact Focal start reproduction around 15 years old.","code":"kin_out_1965_2005$kin_summary %>%   dplyr::filter(group == \"d\", cohort %in% c(1910,1925,1965) ) %>%   ggplot2::ggplot(ggplot2::aes(x = age_focal, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ cohort)  +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"Offspring\")"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"now-lets-consider-the-distributions-of-kin-focal-expects-over-the-lifecourse","dir":"Articles","previous_headings":"","what":"2. Now lets consider the distributions of kin Focal expects over the lifecourse","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"obtain distributions kin output, simply use kin_full data.frame.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"visualizing-the-output-1","dir":"Articles","previous_headings":"","what":"2.1. Visualizing the output","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"Notice additional column age_kin. Rather grouping kin stage summing ages, output (data frame form) gives expected number kin age*stage combination, age Focal.","code":"head(kin_out_1965_2005$kin_full)"},{"path":"https://ivanwilli.github.io/DemoKin/articles/Reference_TwoSex_MultiState_TimeVariant.html","id":"plotting-kin-distributions-for-an-average-focal-of-fixed-age-at-some-fixed-period-in-time","dir":"Articles","previous_headings":"","what":"2.1.1. Plotting kin distributions for an average Focal of fixed age, at some fixed period in time","title":"Expected kin counts by type of relative in a two-sex multi-state time-varying framework","text":"Lets’s consider Focal aged 50 age_focal == 50, examine kin younger siblings; group == “ys”. Restricting years 1965, 1975, 1985, 1995, 2005, can plot expected age*stage distribution kin considered periods, shown : Notice discontinuity along x-abscissa 50. reflects fact Focal’s younger siblings age <50. Contrastingly, look age*stage distribution older siblings, observe another discontinuity bounds kin age >50, plotted : simple bit playing output data frame, can plot age*stage distribution combined siblings Focal","code":"kin_out_1965_2005$kin_full %>%   dplyr::filter(group == \"ys\",                 age_focal == 50) %>%   ggplot2::ggplot(ggplot2::aes(x = age_kin, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ year) +   ggplot2::scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"Younger siblings\") +   ggplot2::ggtitle(\"Focal 50\") kin_out_1965_2005$kin_full %>%   dplyr::filter(group == \"os\",                 age_focal == 50) %>%   ggplot2::ggplot(ggplot2::aes(x = age_kin, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ year) +   ggplot2::scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"Older siblings\") +   ggplot2::ggtitle(\"Focal 50\") kin_out_1965_2005$kin_full %>%   dplyr::filter((group == \"ys\" | group == \"os\"),                 age_focal == 50) %>%   tidyr::pivot_wider(names_from = group, values_from = count) %>%   dplyr::mutate(count = `ys` + `os`) %>%   ggplot2::ggplot(ggplot2::aes(x = age_kin, y = count, color = stage_kin, fill = stage_kin)) +   ggplot2::geom_bar(position = \"stack\", stat = \"identity\") +   ggplot2::facet_grid(sex_kin ~ year) +   ggplot2::scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +   ggplot2::theme_bw() +   ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5)) +   ggplot2::ylab(\"All siblings\") +   ggplot2::ggtitle(\"Focal 50\")"},{"path":"https://ivanwilli.github.io/DemoKin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Iván Williams. Maintainer. Diego Alburez-Gutierrez. Author. Xi Song. Contributor. Caswell Hal. Contributor.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alburez-Gutierrez D (2025). DemoKin: Estimate Population Kin Distribution. R package version 1.0.3, https://github.com/IvanWilli/DemoKin.","code":"@Manual{,   title = {DemoKin: Estimate Population Kin Distribution},   author = {Diego Alburez-Gutierrez},   year = {2025},   note = {R package version 1.0.3},   url = {https://github.com/IvanWilli/DemoKin}, }"},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"demokin","dir":"","previous_headings":"","what":"Estimate Population Kin Distribution","title":"Estimate Population Kin Distribution","text":"DemoKin uses matrix demographic methods compute expected (average) kin counts demographic rates range scenarios assumptions. package R-language implementation Caswell [-@caswell_formal_2019; -@caswell_formal_2020; -@caswell_formal_2022], Caswell Song [-@caswell_formal_2021]. draws previous theoretical development Goodman, Keyfitz Pullum [-@goodman_family_1974].","code":""},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Population Kin Distribution","text":"Download stable version CRAN: can install development version GitHub:","code":"install.packages(\"DemoKin\") # install.packages(\"devtools\") devtools::install_github(\"IvanWilli/DemoKin\")"},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Estimate Population Kin Distribution","text":"Consider average Swedish woman called ‘Focal.’ exercise, assume female closed population everyone experiences Swedish 2015 mortality fertility rates age throughout life; .e., ‘time-invariant’ assumption Caswell [-@caswell_formal_2019]. ask: expected number relatives Focal life course? Let’s explore using Swedish data already included DemoKin. p survival probability age life table f age specific fertility ratios age (see ?kin details). Now, can visualize implied kin counts (.e., average number living kin) Focal age 35 using network ‘Keyfitz’ kinship diagram function plot_diagram:  Relatives identified unique code:","code":"library(DemoKin) swe_surv_2015 <- swe_px[,\"2015\"] swe_asfr_2015 <- swe_asfr[,\"2015\"] swe_2015 <- kin(p = swe_surv_2015, f = swe_asfr_2015, time_invariant = TRUE) # We need to reformat the data a little bit kin_total <- swe_2015$kin_summary # Keep only data for Focal's age 35 kin_total <- kin_total[kin_total$age_focal == 35 , c(\"kin\", \"count_living\")] names(kin_total) <- c(\"kin\", \"count\") plot_diagram(kin_total, rounding = 2)"},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Estimate Population Kin Distribution","text":"details, including extension time-variant rates, deceased kin, multi-state models one-sex framework, see Reference_OneSex vignette; also accessible DemoKin: vignette(\"Reference_OneSex\", package = \"DemoKin\"). two-sex models, see Reference_TwoSex vignette; also accessible DemoKin: vignette(\"Reference_TwoSex\", package = \"DemoKin\"). vignette load, may need install package devtools::install_github(\"IvanWilli/DemoKin\", build_vignettes = T).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Population Kin Distribution","text":"Williams, Iván; Alburez-Gutierrez, Diego; DemoKin team. (2021) DemoKin: R package implement demographic matrix kinship models. URL: https://github.com/IvanWilli/DemoKin.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Estimate Population Kin Distribution","text":"thank Silvia Leek Max Planck Institute Demographic Research designing DemoKin logo. logo includes elements taken adapted file, originally Ansunando, CC -SA 4.0 via Wikimedia Commons. Sha Jiang provided useful comments improving package.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/index.html","id":"get-involved","dir":"","previous_headings":"","what":"Get involved!","title":"Estimate Population Kin Distribution","text":"DemoKin constant development. ’re interested contributing, please get touch, create issue, submit pull request. look forward hearing !","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_fert_list_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"UK female fertility from 1965 to 2022 — Female_parity_fert_list_UK","title":"UK female fertility from 1965 to 2022 — Female_parity_fert_list_UK","text":"UK female fertility 1965 2022","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_fert_list_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK female fertility from 1965 to 2022 — Female_parity_fert_list_UK","text":"","code":"Female_parity_fert_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_fert_list_UK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK female fertility from 1965 to 2022 — Female_parity_fert_list_UK","text":"list age stage matrices, entries give female fert. List starting 1965 ending 2022.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_fert_list_UK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK female fertility from 1965 to 2022 — Female_parity_fert_list_UK","text":"HFD ONS","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_mortality_list_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"UK female parity mortality from 1965 to 2022 — Female_parity_mortality_list_UK","title":"UK female parity mortality from 1965 to 2022 — Female_parity_mortality_list_UK","text":"UK female parity mortality 1965 2022","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_mortality_list_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK female parity mortality from 1965 to 2022 — Female_parity_mortality_list_UK","text":"","code":"Female_parity_mortality_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_mortality_list_UK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK female parity mortality from 1965 to 2022 — Female_parity_mortality_list_UK","text":"list age stage matrices, entries give female parity mortality List starting 1965 ending 2022.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Female_parity_mortality_list_UK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK female parity mortality from 1965 to 2022 — Female_parity_mortality_list_UK","text":"HFD ONS","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Male_parity_mortality_list_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"UK male parity mortality from 1965 to 2022 — Male_parity_mortality_list_UK","title":"UK male parity mortality from 1965 to 2022 — Male_parity_mortality_list_UK","text":"UK male parity mortality 1965 2022","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Male_parity_mortality_list_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK male parity mortality from 1965 to 2022 — Male_parity_mortality_list_UK","text":"","code":"Male_parity_mortality_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/reference/Male_parity_mortality_list_UK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK male parity mortality from 1965 to 2022 — Male_parity_mortality_list_UK","text":"list age stage matrices, entries give male parity mortality List starting 1965 ending 2022.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Male_parity_mortality_list_UK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK male parity mortality from 1965 to 2022 — Male_parity_mortality_list_UK","text":"HFD ONS","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Parity_transfers_by_age_list_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"UK female parity transitions from 1965 to 2022 — Parity_transfers_by_age_list_UK","title":"UK female parity transitions from 1965 to 2022 — Parity_transfers_by_age_list_UK","text":"UK female parity transitions 1965 2022","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Parity_transfers_by_age_list_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK female parity transitions from 1965 to 2022 — Parity_transfers_by_age_list_UK","text":"","code":"Parity_transfers_by_age_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/reference/Parity_transfers_by_age_list_UK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK female parity transitions from 1965 to 2022 — Parity_transfers_by_age_list_UK","text":"list age stage matrices, entries give female parity transitions. List starting 1965 ending 2022.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Parity_transfers_by_age_list_UK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK female parity transitions from 1965 to 2022 — Parity_transfers_by_age_list_UK","text":"HFD ONS","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Redistribution_by_parity_list_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"UK parity assign parity at birth — Redistribution_by_parity_list_UK","title":"UK parity assign parity at birth — Redistribution_by_parity_list_UK","text":"UK parity assign parity birth","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Redistribution_by_parity_list_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK parity assign parity at birth — Redistribution_by_parity_list_UK","text":"","code":"Redistribution_by_parity_list_UK"},{"path":"https://ivanwilli.github.io/DemoKin/reference/Redistribution_by_parity_list_UK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK parity assign parity at birth — Redistribution_by_parity_list_UK","text":"list matrices redistributes newborns age-class 1 parity 0. time-variation.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/Redistribution_by_parity_list_UK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK parity assign parity at birth — Redistribution_by_parity_list_UK","text":"None","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/U_caswell_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Historic and projected survival ratios from Sweden used in Caswell (2021) — U_caswell_2021","title":"Historic and projected survival ratios from Sweden used in Caswell (2021) — U_caswell_2021","text":"Historic projected survival ratios Sweden used Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/U_caswell_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historic and projected survival ratios from Sweden used in Caswell (2021) — U_caswell_2021","text":"","code":"U_caswell_2021"},{"path":"https://ivanwilli.github.io/DemoKin/reference/U_caswell_2021.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historic and projected survival ratios from Sweden used in Caswell (2021) — U_caswell_2021","text":"matrix U years cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/U_caswell_2021.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historic and projected survival ratios from Sweden used in Caswell (2021) — U_caswell_2021","text":"Caswell (2019)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy.html","id":null,"dir":"Reference","previous_headings":"","what":"Title time invariant two-sex multi-state kin projections — all_kin_dy","title":"Title time invariant two-sex multi-state kin projections — all_kin_dy","text":"Title time invariant two-sex multi-state kin projections","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title time invariant two-sex multi-state kin projections — all_kin_dy","text":"","code":"all_kin_dy(   Uf,   Um,   Ff,   Fm,   alpha,   na,   ns,   Parity,   sex_Focal,   Initial_stage_Focal )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title time invariant two-sex multi-state kin projections — all_kin_dy","text":"Uf matrix (block structured). transfers female individuals across stages advances age (conditional survial) Um matrix (block structured). transfers male individuals across stages advances age (conditional survial) Ff matrix (block structured). accounts female reproduction, assigns newborns given age*stage Fm matrix (block structured). accounts male reproduction; assigns newborns age-class, stage alpha scalar. birth ratio (male:female) na scalar. number ages. ns scalar. number stages. Parity logical. true omit mothers parity 0, re-scale mother's age*stage parenting sex_Focal logical. Female Male Initial_stage_Focal numeric. natural number 1,2,3,4,...","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title time invariant two-sex multi-state kin projections — all_kin_dy","text":"list matrices. list entry represents particular kin. kin chacacterised matrix dimension: nrow = 2* na * ns (2-sex age-stage structured) ncol = na (Focal's age) yielding age*stage distribution kin age Focal","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy_TV.html","id":null,"dir":"Reference","previous_headings":"","what":"Title time-variant two-sex multi-state kin projections — all_kin_dy_TV","title":"Title time-variant two-sex multi-state kin projections — all_kin_dy_TV","text":"Title time-variant two-sex multi-state kin projections","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy_TV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title time-variant two-sex multi-state kin projections — all_kin_dy_TV","text":"","code":"all_kin_dy_TV(   Uf,   Um,   Ff,   Fm,   alpha,   na,   ns,   Parity,   sex_Focal,   Initial_stage_Focal,   previous_kin_Focal,   prev_kin_children,   prev_kin_grandchildren,   prev_kin_greatgrandchildren,   prev_kin_parents,   prev_kin_grand_parents,   prev_kin_great_grand_parents,   prev_kin_older_sibs,   prev_kin_younger_sibs,   prev_kin_older_niece_nephew,   prev_kin_younger_niece_nephew,   prev_kin_older_aunts_uncles,   prev_kin_younger_aunts_uncles,   prev_kin_older_cousins,   prev_kin_younger_cousins,   previous_population_age_stage_structure )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy_TV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title time-variant two-sex multi-state kin projections — all_kin_dy_TV","text":"Uf matrix (block structured). transfers female individuals across stages advances age (conditional survial) Um matrix (block structured). transfers male individuals across stages advances age (conditional survial) Ff matrix (block structured). accounts female reproduction, assigns newborns given age*stage Fm matrix (block structured). accounts male reproduction; assigns newborns age-class, stage alpha scalar. birth ratio (male:female) na scalar. number ages. ns scalar. number stages. Parity logical. true omit mothers parity 0, re-scale mother's age*stage parenting sex_Focal logical. Female Male Initial_stage_Focal numeric. natural number 1,2,3,4,... previous_kin_Focal matrix. last years kinship output. prev_kin_children matrix. last years kinship output. prev_kin_grandchildren matrix. last years kinship output. prev_kin_greatgrandchildren matrix. last years kinship output. prev_kin_parents matrix. last years kinship output. prev_kin_grand_parents matrix. last years kinship output. prev_kin_older_sibs matrix. last years kinship output. prev_kin_younger_sibs matrix. last years kinship output. prev_kin_older_niece_nephew matrix. last years kinship output. prev_kin_younger_niece_nephew matrix. last years kinship output. prev_kin_older_aunts_uncles matrix. last years kinship output. prev_kin_younger_aunts_uncles matrix. last years kinship output. prev_kin_older_cousins matrix. last years kinship output. prev_kin_younger_cousins matrix. last years kinship output. previous_population_age_stage_structure vector. transient \"population structure\" (age*stage distributed)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/all_kin_dy_TV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title time-variant two-sex multi-state kin projections — all_kin_dy_TV","text":"list matrices. list entry represents particular kin. kin chacacterised matrix dimension: nrow = 2* na * ns (2-sex age-stage structured) ncol = na (Focal's age) yielding age*stage distribution kin age Focal","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_cumsum_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Accumulated kin by each age of Focal, for each time period, and cohort of birth — create_cumsum_df","title":"Title Accumulated kin by each age of Focal, for each time period, and cohort of birth — create_cumsum_df","text":"Title Accumulated kin age Focal, time period, cohort birth","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_cumsum_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Accumulated kin by each age of Focal, for each time period, and cohort of birth — create_cumsum_df","text":"","code":"create_cumsum_df(   kin_matrix_lists,   kin_names,   years,   start_year,   na,   ns,   specific_kin = NULL )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_cumsum_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Accumulated kin by each age of Focal, for each time period, and cohort of birth — create_cumsum_df","text":"kin_matrix_lists list lists kin matrices: list( list(X_focal), list(X_parents), ... ). Outer list length 14  = number kin. Inner lists lenght = timescale list(X_focal) = list(X_focalyear1,X_focalyear2,...,X_focalyearlast) kin_names list characters. Corresponding lists: list(\"F\",\"m\",....) years vector. timescale implement kinship model. start_year . First year varying vital rates (e.g., years = 1990:2000 start_year = 1990) na numeric. Number ages. ns numeric. Number stages. specific_kin character. names kin wish analyse, e.g., list(\"os\",\"ys\"). null returns 14.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_cumsum_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Accumulated kin by each age of Focal, for each time period, and cohort of birth — create_cumsum_df","text":"data frame gives age Focal year timescale, Focal's experienced number kin demarcated stages (summed ages)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_full_dists_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Title joint age*stage distributions of kin by each age of Focal, for each time period, and cohort of birth — create_full_dists_df","title":"Title joint age*stage distributions of kin by each age of Focal, for each time period, and cohort of birth — create_full_dists_df","text":"Title joint age*stage distributions kin age Focal, time period, cohort birth","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_full_dists_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title joint age*stage distributions of kin by each age of Focal, for each time period, and cohort of birth — create_full_dists_df","text":"","code":"create_full_dists_df(   kin_matrix_lists,   kin_names,   years,   start_year,   na,   ns,   specific_kin = NULL )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_full_dists_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title joint age*stage distributions of kin by each age of Focal, for each time period, and cohort of birth — create_full_dists_df","text":"kin_matrix_lists list lists kin matrices: list( list(X_focal), list(X_parents), ... ). Outer list length 14  = number kin. Inner lists lenght = timescale list(X_focal) = list(X_focalyear1,X_focalyear2,...,X_focalyearlast) kin_names list characters. Corresponding lists: list(\"F\",\"m\",....) years vector. timescale implement kinship model. start_year . First year varying vital rates (e.g., years = 1990:2000 start_year = 1990) na numeric. Number ages. ns numeric. Number stages. specific_kin character. names kin wish analyse, e.g., list(\"os\",\"ys\"). null returns 14.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/create_full_dists_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title joint age*stage distributions of kin by each age of Focal, for each time period, and cohort of birth — create_full_dists_df","text":"data frame gives age Focal year timescale, full age*stage dist kin","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/demokin_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"DemoKin codes, Caswell (2020) codes, and useful labels. — demokin_codes","title":"DemoKin codes, Caswell (2020) codes, and useful labels. — demokin_codes","text":"DemoKin codes, Caswell (2020) codes, useful labels.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/demokin_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemoKin codes, Caswell (2020) codes, and useful labels. — demokin_codes","text":"","code":"demokin_codes"},{"path":"https://ivanwilli.github.io/DemoKin/reference/demokin_codes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DemoKin codes, Caswell (2020) codes, and useful labels. — demokin_codes","text":"data.frame codes labels distinction kin types.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/f_caswell_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Historic and projected fertility ratios from Sweden used in Caswell (2021) — f_caswell_2021","title":"Historic and projected fertility ratios from Sweden used in Caswell (2021) — f_caswell_2021","text":"Historic projected fertility ratios Sweden used Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/f_caswell_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historic and projected fertility ratios from Sweden used in Caswell (2021) — f_caswell_2021","text":"","code":"f_caswell_2021"},{"path":"https://ivanwilli.github.io/DemoKin/reference/f_caswell_2021.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historic and projected fertility ratios from Sweden used in Caswell (2021) — f_caswell_2021","text":"matrix f years cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/f_caswell_2021.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historic and projected fertility ratios from Sweden used in Caswell (2021) — f_caswell_2021","text":"Caswell (2019)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_asfr_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Fertility for France (2012) by sex in Caswell (2022). — fra_asfr_sex","title":"Fertility for France (2012) by sex in Caswell (2022). — fra_asfr_sex","text":"Fertility France (2012) sex Caswell (2022).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_asfr_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fertility for France (2012) by sex in Caswell (2022). — fra_asfr_sex","text":"","code":"fra_asfr_sex"},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_asfr_sex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fertility for France (2012) by sex in Caswell (2022). — fra_asfr_sex","text":"data.frame age specific fertility rates age sex.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_asfr_sex.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fertility for France (2012) by sex in Caswell (2022). — fra_asfr_sex","text":"Caswell (2022)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_surv_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival probability for France (2012) by sex in Caswell (2022). — fra_surv_sex","title":"Survival probability for France (2012) by sex in Caswell (2022). — fra_surv_sex","text":"Survival probability France (2012) sex Caswell (2022).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_surv_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival probability for France (2012) by sex in Caswell (2022). — fra_surv_sex","text":"","code":"fra_surv_sex"},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_surv_sex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survival probability for France (2012) by sex in Caswell (2022). — fra_surv_sex","text":"data.frame survival probabilities age sex.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/fra_surv_sex.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survival probability for France (2012) by sex in Caswell (2022). — fra_surv_sex","text":"Caswell (2022)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a one-sex framework. — kin","title":"Estimate kin counts in a one-sex framework. — kin","text":"Implementation Goodman-Keyfitz-Pullum equations matrix framework. produce matrilineal (patrilineal) kin count distribution kin age.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a one-sex framework. — kin","text":"","code":"kin(   p = NULL,   f = NULL,   time_invariant = TRUE,   pi = NULL,   n = NULL,   output_cohort = NULL,   output_period = NULL,   output_kin = NULL,   output_age_focal = NULL,   birth_female = 1/2.04,   summary_kin = TRUE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a one-sex framework. — kin","text":"p numeric. vector (atomic)  matrix probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). f numeric. p fertility rates. time_invariant logical. Constant assumption given year rates. Default TRUE. pi numeric. U childbearing distribution (sum 1). Optional. n numeric. time_invariant = FALSE. p population distribution (counts %). Optional. output_cohort integer. Vector year cohorts returning results. within input data years range. output_period integer. Vector period years returning results. within input data years range. output_kin character. kin types return: \"m\" mother, \"d\" daughter,... output_age_focal integer. Vector ages select (make faster run). birth_female numeric. Female portion birth. multiplies f argument. f already female offspring, summary_kin logical. Whether include kin_summary table (see output details). Default TRUE. needs set 1.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a one-sex framework. — kin","text":"list : kin_full data frame year, cohort, Focal´s age, related ages type kin (example d daughter, oa older aunts, etc.), including living dead kin age. kin_summary data frame Focal´s age, related ages type kin, indicators obtained processing kin_full, grouping cohort period (depending given arguments): count_living: count living kin actual age Focal mean_age: mean age type living kin. sd_age: standard deviation age type living kin. count_death: count dead kin specific age Focal. count_cum_death: cumulated count dead kin specific age Focal. mean_age_lost: mean age Focal lost relative.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a one-sex framework. — kin","text":"See Caswell (2019) Caswell (2021) details formulas. One sex (female default).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate kin counts in a one-sex framework. — kin","text":"","code":"# Kin expected matrilineal count for a Swedish female based on 2015 rates. swe_surv_2015 <- swe_px[,\"2015\"] swe_asfr_2015 <- swe_asfr[,\"2015\"] # Run kinship models swe_2015 <- kin(p = swe_surv_2015, f = swe_asfr_2015) head(swe_2015$kin_summary) #> # A tibble: 6 × 10 #>   age_focal kin   year  cohort count_living mean_age sd_age count_dead #>       <int> <chr> <lgl> <lgl>         <dbl>    <dbl>  <dbl>      <dbl> #> 1         0 coa   NA    NA           0.275      8.32   6.14  0.0000633 #> 2         0 cya   NA    NA           0.0898     4.05   3.68  0.0000370 #> 3         0 d     NA    NA           0        NaN    NaN     0         #> 4         0 gd    NA    NA           0        NaN    NaN     0         #> 5         0 ggd   NA    NA           0        NaN    NaN     0         #> 6         0 ggm   NA    NA           0.320     84.4    6.43  0.0287    #> # ℹ 2 more variables: count_cum_dead <dbl>, mean_age_lost <dbl>"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a two-sex framework — kin2sex","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"Implementation two-sex matrix kinship model. produces kin counts grouped kin, age sex relatives Focal´s age. example, male cousins aunts uncles different sibling's parents grouped one male count cousins. Note output labels relative following female notation: label m refers either mothers fathers, column sex_kin determine sex relative.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"","code":"kin2sex(   pf = NULL,   pm = NULL,   ff = NULL,   fm = NULL,   time_invariant = TRUE,   sex_focal = \"f\",   birth_female = 1/2.04,   pif = NULL,   pim = NULL,   nf = NULL,   nm = NULL,   Hf = NULL,   Hm = NULL,   output_cohort = NULL,   output_period = NULL,   output_kin = NULL,   output_age_focal = NULL,   summary_kin = TRUE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"pf numeric. vector (atomic)  matrix female probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). pm numeric. vector (atomic)  matrix male probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). ff numeric. pf fertility rates. fm numeric. pm fertility rates. time_invariant logical. Constant assumption given year rates. Default TRUE. sex_focal character. \"f\" female \"m\" male. birth_female numeric. Female portion birth. multiplies f argument. f already female offspring, needs set 1. pif numeric. using specific age distribution childbearing mothers (length ages). Default NULL. pim numeric. using specific age distribution childbearing fathers (length ages). Default NULL. nf numeric. time_invariant = FALSE. pf population distribution (counts %). Optional. nm numeric. time_invariant = FALSE. pm population distribution (counts %). Optional. Hf numeric. list list element (name list element year) contains matrix cause-specific hazards females rows causes columns ages, name col age. Hm numeric. list list element (name list element year) contains matrix cause-specific hazards males rows causes columns ages, name col age. output_cohort integer. Vector year cohorts returning results. within input data years range. output_period integer. Vector period years returning results. within input data years range. output_kin character. kin types return: \"m\" mother, \"d\" daughter,... output_age_focal integer. Vector ages select (make faster run). summary_kin logical. Whether include kin_summary table (see output details). Default TRUE.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"list : kin_full data frame year, cohort, Focal´s age, related ages type kin (example d daughter son depending sex_kin, oa older aunts uncles also depending sex_kin value, etc.), including living dead kin age. kin_summary data frame Focal´s age, related ages, sex type kin, indicators obtained processing kin_full, grouping cohort period (depending given arguments): count_living: count living kin actual age Focal mean_age: mean age type living kin. sd_age: standard deviation age type living kin. count_death: count dead kin specific age Focal. count_cum_death: cumulated count dead kin specific age Focal. mean_age_lost: mean age Focal lost relative.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"See Caswell (2022) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin2sex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate kin counts in a two-sex framework — kin2sex","text":"","code":"# Kin expected count by relative sex for a French female based on 2012 rates. fra_fert_f <- fra_asfr_sex[,\"ff\"] fra_fert_m <- fra_asfr_sex[,\"fm\"] fra_surv_f <- fra_surv_sex[,\"pf\"] fra_surv_m <- fra_surv_sex[,\"pm\"] fra_2012 <- kin2sex(fra_surv_f, fra_surv_m, fra_fert_f, fra_fert_m) head(fra_2012$kin_summary) #> # A tibble: 6 × 11 #>   age_focal kin   sex_kin year  cohort count_living mean_age sd_age count_dead #>       <int> <chr> <chr>   <lgl> <lgl>         <dbl>    <dbl>  <dbl>      <dbl> #> 1         0 coa   f       NA    NA            1.27      9.55   7.18   0.000236 #> 2         0 coa   m       NA    NA            1.32      9.54   7.17   0.000408 #> 3         0 cya   f       NA    NA            0.455     5.19   4.84   0.000109 #> 4         0 cya   m       NA    NA            0.473     5.19   4.84   0.000143 #> 5         0 d     f       NA    NA            0       NaN    NaN      0        #> 6         0 d     m       NA    NA            0       NaN    NaN      0        #> # ℹ 2 more variables: count_cum_dead <dbl>, mean_age_lost <dbl>"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts by age and stage in a time invariant framework — kin_multi_stage","title":"Estimate kin counts by age and stage in a time invariant framework — kin_multi_stage","text":"Implementation age-stage kin estimates (multi-state) Caswell (2020). Stages implied length input lists.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts by age and stage in a time invariant framework — kin_multi_stage","text":"","code":"kin_multi_stage(   U = NULL,   f = NULL,   D = NULL,   H = NULL,   birth_female = 1/2.04,   output_kin = NULL,   parity = FALSE,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts by age and stage in a time invariant framework — kin_multi_stage","text":"U list. age elements column-stochastic transition matrix dimension state space, conditional survival. f matrix. state-specific fertility (age rows states columns). accepted also list age-class. D matrix. survival probabilities state (age rows states columns). accepted also list state survival matrices. H matrix. assigns offspring individuals stage appropriate age class (age rows states columns). accepted also list matrix state. birth_female numeric. Female portion birth. output_kin character. kin return. example \"m\" mother, \"d\" daughter. See vignette kin types. parity logical. parity states imply age distribution mothers re-scaled parity 0 Focal born. Default TRUE. list_output logical. Results list. Default FALSE.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts by age and stage in a time invariant framework — kin_multi_stage","text":"data frame focal´s age, related ages type kin (example d daughter, oa older aunts, etc.), living death kin counts, specific stage. list_output = TRUE list elements kin types.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage_time_variant_2sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts by age, stage, and sex, in a time variant framework — kin_multi_stage_time_variant_2sex","title":"Estimate kin counts by age, stage, and sex, in a time variant framework — kin_multi_stage_time_variant_2sex","text":"Implementation combined formal demographic models: Caswell II,III,IV.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage_time_variant_2sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts by age, stage, and sex, in a time variant framework — kin_multi_stage_time_variant_2sex","text":"","code":"kin_multi_stage_time_variant_2sex(   U_list_females = NULL,   U_list_males = NULL,   F_list_females = NULL,   F_list_males = NULL,   T_list_females = NULL,   T_list_males = NULL,   H_list = NULL,   birth_female = 0.49,   parity = FALSE,   output_kin = NULL,   summary_kin = TRUE,   sex_Focal = \"Female\",   initial_stage_Focal = NULL,   output_years )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage_time_variant_2sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts by age, stage, and sex, in a time variant framework — kin_multi_stage_time_variant_2sex","text":"U_list_females list matrix entries: period-specific female survival probabilities. Age rows states columns. U_list_males list matrix entries: period-specific male survival probabilities. Age rows states columns. F_list_females list matrix elements: period-specific female fertility (age rows states columns). F_list_males list matrix entries: period-specific male fertility (age rows states columns). T_list_females list lists matrix entries: outer list entry period-specific, composed list stochastic matrices describe age-specific female probabilities transferring stage T_list_males list lists matrix entries: outer list entry period-specific, composed list stochastic matrices describe age-specific male probabilities transferring stage H_list list matrix entries: redistribution newborns across stage specific age-class birth_female numeric. birth ratio females males population parity logical. parity states imply age distribution mothers re-scaled parity 0 Focal born. Default TRUE. output_kin vector. vector particular kin one wishes obtain results , e.g., c(\"m\",\"d\",\"oa\"). Default kin types. summary_kin logical. Results data frame accumulated kin age Focal TRUE, kin age*stage distribution age Focal FALSE. sex_Focal character. Female Male user requests. initial_stage_Focal Numeric Natural number set 1,2,...,. stage Focal born (e.g., 1 parity 0) output_years vector. times wish count kin: start year = output_years1, end year = output_yearslength.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_multi_stage_time_variant_2sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts by age, stage, and sex, in a time variant framework — kin_multi_stage_time_variant_2sex","text":"data frame focal age, kin age, kin stage, kin sex, year, cohort, expected number kin given restrictions.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_svk1990_caswell2020.html","id":null,"dir":"Reference","previous_headings":"","what":"Output for Slovakia 1990 in Caswell (2020). — kin_svk1990_caswell2020","title":"Output for Slovakia 1990 in Caswell (2020). — kin_svk1990_caswell2020","text":"Output Slovakia 1990 Caswell (2020).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_svk1990_caswell2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output for Slovakia 1990 in Caswell (2020). — kin_svk1990_caswell2020","text":"","code":"kin_svk1990_caswell2020"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_svk1990_caswell2020.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output for Slovakia 1990 in Caswell (2020). — kin_svk1990_caswell2020","text":"list specific kin types age-stage matrix","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_svk1990_caswell2020.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Output for Slovakia 1990 in Caswell (2020). — kin_svk1990_caswell2020","text":"Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time invariant framework for one-sex model (matrilineal/patrilineal) — kin_time_invariant","title":"Estimate kin counts in a time invariant framework for one-sex model (matrilineal/patrilineal) — kin_time_invariant","text":"Mtrix implementation Goodman-Keyfitz-Pullum equations adapted Caswell (2019).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time invariant framework for one-sex model (matrilineal/patrilineal) — kin_time_invariant","text":"","code":"kin_time_invariant(   p = NULL,   f = NULL,   birth_female = 1/2.04,   pi = NULL,   output_kin = NULL,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time invariant framework for one-sex model (matrilineal/patrilineal) — kin_time_invariant","text":"p numeric. vector survival probabilities length ages. f numeric. vector age-specific fertility rates length ages. birth_female numeric. Female portion birth. pi numeric. using specific non-stable age distribution childbearing (length ages). Default NULL. output_kin character. kin return. example \"m\" mother, \"d\" daughter. See vignette kin types. list_output logical. Results list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time invariant framework for one-sex model (matrilineal/patrilineal) — kin_time_invariant","text":"data frame focal´s age, related ages type kin (example d daughter, oa older aunts, etc.), alive death. list_output = TRUE list.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","text":"Two-sex matrix framework kin count estimates.produces kin counts grouped kin, age sex relatives Focal´s age. example, male cousins aunts uncles different sibling's parents grouped one male count cousins.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","text":"","code":"kin_time_invariant_2sex(   pf = NULL,   pm = NULL,   ff = NULL,   fm = NULL,   sex_focal = \"f\",   birth_female = 1/2.04,   pif = NULL,   pim = NULL,   output_kin = NULL,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","text":"pf numeric. vector survival probabilities females length ages. pm numeric. vector survival probabilities males length ages. ff numeric. vector age-specific fertility rates females length ages. fm numeric. vector age-specific fertility rates males length ages. sex_focal character. \"f\" female \"m\" male. birth_female numeric. Female portion birth. pif numeric. using specific non-stable age distribution childbearing mothers (length ages). Default NULL. pim numeric. using specific non-stable age distribution childbearing fathers (length ages). Default NULL. output_kin character. kin return, considering matrilineal names. example \"m\" parents, \"d\" children, etc. See vignette kin types. list_output logical. Results list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","text":"data frame focal´s age, related ages type kin (example d children, oa older aunts/uncles, etc.), sex, alive death. list_output = TRUE list.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex","text":"See Caswell (2022) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex_cod.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","text":"Two-sex matrix framework kin count death estimates.produces kin counts grouped kin, age sex relatives Focal´s age. example, male cousins aunts uncles different sibling's parents grouped one male count cousins. also produces kin deaths grouped kin, age, sex relatives Focal´s age, cause death.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex_cod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","text":"","code":"kin_time_invariant_2sex_cod(   pf = NULL,   pm = NULL,   ff = NULL,   fm = NULL,   Hf = NULL,   Hm = NULL,   sex_focal = \"f\",   birth_female = 1/2.04,   pif = NULL,   pim = NULL,   output_kin = NULL,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex_cod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","text":"pf numeric. vector survival probabilities females length ages. pm numeric. vector survival probabilities males length ages. ff numeric. vector age-specific fertility rates females length ages. fm numeric. vector age-specific fertility rates males length ages. Hf numeric. matrix cause-specific hazards females rows causes columns ages, name col age. Hm numeric. matrix cause-specific hazards males rows causes columns ages, name col age. sex_focal character. \"f\" female \"m\" male. birth_female numeric. Female portion birth. pif numeric. using specific non-stable age distribution childbearing mothers (length ages). Default NULL. pim numeric. using specific non-stable age distribution childbearing fathers (length ages). Default NULL. output_kin character. kin return, considering matrilineal names. example \"m\" parents, \"d\" children, etc. See vignette kin types. list_output logical. Results list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex_cod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","text":"data frame focal´s age, related ages type kin (example d children, oa older aunts/uncles, etc.), sex, alive death. list_output = TRUE list.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_invariant_2sex_cod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a time invariant framework for two-sex model. — kin_time_invariant_2sex_cod","text":"See Caswell (2022) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","title":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","text":"Matrix implementation time variant Goodman-Keyfitz-Pullum equations matrix framework.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","text":"","code":"kin_time_variant(   p = NULL,   f = NULL,   pi = NULL,   n = NULL,   output_cohort = NULL,   output_period = NULL,   output_kin = NULL,   birth_female = 1/2.04,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","text":"p numeric. matrix survival ratios rows ages columns years. Column names must equal interval. f numeric. matrix age-specific fertility rates rows ages columns years. Coincident U. pi numeric. matrix distribution childbearing rows ages columns years. Coincident U. n numeric. matrix population rows ages columns years. Coincident U. output_cohort integer. Year birth focal return output. vector. within input data years range. output_period integer. Year return kinship structure. vector. within input data years range. output_kin character. kin return output: \"m\" mother, \"d\" daughter,... See vignette exahustive kin. birth_female numeric. Female portion birth. list_output logical. Results list years elements (result output_cohort output_period combination), second list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","text":"data frame population kinship structure, Focal's cohort, focal´s age, period year, type relatives (example d daughter, oa older aunts, etc.), living death kin counts, age (living time deceased) relatives. list_output = TRUE list.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a time variant framework (dynamic rates) for one-sex model (matrilineal/patrilineal) — kin_time_variant","text":"See Caswell (2021) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","text":"Two-sex matrix framework kin count estimates varying rates. produces kin counts grouped kin, age sex relatives Focal´s age. example, male cousins aunts uncles different sibling's parents grouped one male count cousins.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","text":"","code":"kin_time_variant_2sex(   pf = NULL,   pm = NULL,   ff = NULL,   fm = NULL,   sex_focal = \"f\",   birth_female = 1/2.04,   pif = NULL,   pim = NULL,   nf = NULL,   nm = NULL,   output_cohort = NULL,   output_period = NULL,   output_kin = NULL,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","text":"pf numeric. vector (atomic)  matrix probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). pm numeric. vector (atomic)  matrix probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). ff numeric. pf fertility rates. fm numeric. pm fertility rates. sex_focal character. \"f\" female \"m\" male. birth_female numeric. Female portion birth. multiplies f argument. f already female offspring, needs set 1. pif numeric. using specific age distribution childbearing mothers (length ages). Default NULL. pim numeric. using specific age distribution childbearing fathers (length ages). Default NULL. nf numeric. pf population distribution (counts %). Optional. nm numeric. pm population distribution (counts %). Optional. output_cohort integer. Vector year cohorts returning results. within input data years range. output_period integer. Vector period years returning results. within input data years range. output_kin character. kin types return: \"m\" mother, \"d\" daughter,... list_output logical. Results list years elements (result output_cohort output_period combination), second list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","text":"data.frame year, cohort, Focal´s age, related ages, sex type kin (example d daughter, oa older aunts, etc.), including living dead kin age sex.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex","text":"See Caswell (2022) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex_cod.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","text":"Two-sex matrix framework kin count estimates varying rates. produces kin counts grouped kin, age sex relatives Focal´s age. example, male cousins aunts uncles different sibling's parents grouped one male count cousins. also produces kin deaths grouped kin, age, sex relatives Focal´s age, cause death.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex_cod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","text":"","code":"kin_time_variant_2sex_cod(   pf = NULL,   pm = NULL,   ff = NULL,   fm = NULL,   Hf = NULL,   Hm = NULL,   sex_focal = \"f\",   birth_female = 1/2.04,   pif = NULL,   pim = NULL,   nf = NULL,   nm = NULL,   output_cohort = NULL,   output_period = NULL,   output_kin = NULL,   list_output = FALSE )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex_cod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","text":"pf numeric. vector (atomic)  matrix probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). pm numeric. vector (atomic)  matrix probabilities (survival ratios, transition age class general perspective) rows ages (columns years case matrix, name col year). ff numeric. pf fertility rates. fm numeric. pm fertility rates. Hf numeric. list list element (name list element year) contains matrix cause-specific hazards females rows causes columns ages, name col age. Hm numeric. list list element (name list element year) contains matrix cause-specific hazards males rows causes columns ages, name col age. sex_focal character. \"f\" female \"m\" male. birth_female numeric. Female portion birth. multiplies f argument. f already female offspring, needs set 1. pif numeric. using specific age distribution childbearing mothers (length ages). Default NULL. pim numeric. using specific age distribution childbearing fathers (length ages). Default NULL. nf numeric. pf population distribution (counts %). Optional. nm numeric. pm population distribution (counts %). Optional. output_cohort integer. Vector year cohorts returning results. within input data years range. output_period integer. Vector period years returning results. within input data years range. output_kin character. kin types return: \"m\" mother, \"d\" daughter,... list_output logical. Results list years elements (result output_cohort output_period combination), second list output_kin elements, focal´s age columns kin ages rows (2 * ages, last chunk ages death experience). Default FALSE","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex_cod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","text":"data.frame year, cohort, Focal´s age, related ages, sex type kin (example d daughter, oa older aunts, etc.), including living dead kin age sex.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/kin_time_variant_2sex_cod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate kin counts in a time variant framework (dynamic rates) in a two-sex framework (Caswell, 2022) — kin_time_variant_2sex_cod","text":"See Caswell (2022) details formulas.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/output_period_cohort_combination.html","id":null,"dir":"Reference","previous_headings":"","what":"APC combination to return — output_period_cohort_combination","title":"APC combination to return — output_period_cohort_combination","text":"define APC combination return kin kin2sex.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/output_period_cohort_combination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"APC combination to return — output_period_cohort_combination","text":"","code":"output_period_cohort_combination(   output_cohort = NULL,   output_period = NULL,   age = NULL,   years_data = NULL )"},{"path":"https://ivanwilli.github.io/DemoKin/reference/output_period_cohort_combination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"APC combination to return — output_period_cohort_combination","text":"output_cohort integer. vector selected calendar years. output_period integer. vector selected cohort years. age integer. vector ages kinship network filtered. years_data integer. vector years time-varying kinship network filtered.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/output_period_cohort_combination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"APC combination to return — output_period_cohort_combination","text":"data.frame years ages filter kin kin_2sex functions.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/output_period_cohort_combination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"APC combination to return — output_period_cohort_combination","text":"returning period cohort data huge time-series hard memory consuming, function auxiliary one deal selection inputs output_cohort output_period.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_caswell_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Historic and projected mother´s age distribution of childbearing from Sweden used in Caswell (2021) — pi_caswell_2021","title":"Historic and projected mother´s age distribution of childbearing from Sweden used in Caswell (2021) — pi_caswell_2021","text":"Historic projected mother´s age distribution childbearing Sweden used Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_caswell_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historic and projected mother´s age distribution of childbearing from Sweden used in Caswell (2021) — pi_caswell_2021","text":"","code":"pi_caswell_2021"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_caswell_2021.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historic and projected mother´s age distribution of childbearing from Sweden used in Caswell (2021) — pi_caswell_2021","text":"matrix pi years cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_caswell_2021.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historic and projected mother´s age distribution of childbearing from Sweden used in Caswell (2021) — pi_caswell_2021","text":"Caswell (2019)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixing distributions for the time-invariant multi-state 2-sex model: Non-parity case — pi_mix","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Non-parity case — pi_mix","text":"Mixing distributions time-invariant multi-state 2-sex model: Non-parity case","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Non-parity case — pi_mix","text":"","code":"pi_mix(Uf, Um, Ff, Fm, alpha, na, ns)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Non-parity case — pi_mix","text":"Uf matrix. Block-structured matrix transfers females stage advances age Um matrix. Block-structured matrix transfers males stage advances age Ff matrix. Block-structured matrix counts reproduction females assigns newborns age stage Fm matrix. Block-structured matrix counts reproduction males assigns newborns age stage alpha scalar. Birth ratio male:female na scalar. Number age-classes ns scalar. Number stages","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Non-parity case — pi_mix","text":"list (vectors). list[1] = full agestagesex distribution list[2] = female agestage distribution normalised list[3] = male agestage distribution normalised list[4] = female marginal age distribution normalised list[5] = male marginal age distribution normalised","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixing distributions for the time-variant multi-state 2-sex model: Non-parity case — pi_mix_TV","title":"Mixing distributions for the time-variant multi-state 2-sex model: Non-parity case — pi_mix_TV","text":"Mixing distributions time-variant multi-state 2-sex model: Non-parity case","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixing distributions for the time-variant multi-state 2-sex model: Non-parity case — pi_mix_TV","text":"","code":"pi_mix_TV(Ff, Fm, alpha, na, ns, previous_age_stage_dist)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixing distributions for the time-variant multi-state 2-sex model: Non-parity case — pi_mix_TV","text":"Ff matrix. Block-structured matrix counts reproduction females assigns newborns age stage Fm matrix. Block-structured matrix counts reproduction males assigns newborns age stage alpha scalar. Birth ratio male:female na scalar. Number age-classes ns scalar. Number stages previous_age_stage_dist vector. Last years population structure (agestagesex full distribution)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixing distributions for the time-variant multi-state 2-sex model: Non-parity case — pi_mix_TV","text":"list (vectors). list[1] = full agestagesex distribution list[2] = female agestage distribution normalised list[3] = male agestage distribution normalised list[4] = female marginal age distribution normalised list[5] = male marginal age distribution normalised","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV_parity.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixing distributions for the time-variant multi-state 2-sex model: Parity-specific case — pi_mix_TV_parity","title":"Mixing distributions for the time-variant multi-state 2-sex model: Parity-specific case — pi_mix_TV_parity","text":"Mixing distributions time-variant multi-state 2-sex model: Parity-specific case","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV_parity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixing distributions for the time-variant multi-state 2-sex model: Parity-specific case — pi_mix_TV_parity","text":"","code":"pi_mix_TV_parity(Ff, Fm, alpha, na, ns, previous_age_stage_dist)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV_parity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixing distributions for the time-variant multi-state 2-sex model: Parity-specific case — pi_mix_TV_parity","text":"Ff matrix. Block-structured matrix counts reproduction females assigns newborns age stage Fm matrix. Block-structured matrix counts reproduction males assigns newborns age stage alpha scalar. Birth ratio male:female na scalar. Number age-classes ns scalar. Number stages previous_age_stage_dist vector. Last years population structure (agestagesex full distribution) Uf matrix. Block-structured matrix transfers females stage advances age Um matrix. Block-structured matrix transfers males stage advances age","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_TV_parity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixing distributions for the time-variant multi-state 2-sex model: Parity-specific case — pi_mix_TV_parity","text":"list (vectors). list[1] = full agestagesex distribution list[2] = female agestage distribution normalised list[3] = male agestage distribution normalised list[4] = female marginal age distribution normalised list[5] = male marginal age distribution normalised","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_parity.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixing distributions for the time-invariant multi-state 2-sex model: Parity-specific case — pi_mix_parity","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Parity-specific case — pi_mix_parity","text":"Mixing distributions time-invariant multi-state 2-sex model: Parity-specific case","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_parity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Parity-specific case — pi_mix_parity","text":"","code":"pi_mix_parity(Uf, Um, Ff, Fm, alpha, na, ns)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_parity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Parity-specific case — pi_mix_parity","text":"Uf matrix. Block-structured matrix transfers females stage advances age Um matrix. Block-structured matrix transfers males stage advances age Ff matrix. Block-structured matrix counts reproduction females assigns newborns age stage Fm matrix. Block-structured matrix counts reproduction males assigns newborns age stage alpha scalar. Birth ratio male:female na scalar. Number age-classes ns scalar. Number stages","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pi_mix_parity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixing distributions for the time-invariant multi-state 2-sex model: Parity-specific case — pi_mix_parity","text":"list (vectors). list[1] = full agestagesex distribution list[2] = female agestage distribution normalised list[3] = male agestage distribution normalised list[4] = female marginal age distribution normalised list[5] = male marginal age distribution normalised","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ivanwilli.github.io/DemoKin/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/plot_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a Kin diagram (network) — plot_diagram","title":"plot a Kin diagram (network) — plot_diagram","text":"Draws Keyfitz-style kinship diagram given kinship object created kin function. Displays expected kin counts Focal aged ''.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/plot_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a Kin diagram (network) — plot_diagram","text":"","code":"plot_diagram(kin_total, rounding = 3)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/plot_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a Kin diagram (network) — plot_diagram","text":"kin_total data.frame. values column kin define relative type - see demokin_codes(). Values column count expected number relatives. rounding numeric. Number decimals show diagram.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/plot_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot a Kin diagram (network) — plot_diagram","text":"Keyfitz-style kinship plot.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/rename_kin.html","id":null,"dir":"Reference","previous_headings":"","what":"rename kin — rename_kin","title":"rename kin — rename_kin","text":"Add kin labels depending sex","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/rename_kin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rename kin — rename_kin","text":"","code":"rename_kin(df, sex = \"f\")"},{"path":"https://ivanwilli.github.io/DemoKin/reference/rename_kin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rename kin — rename_kin","text":"df data.frame. data frame variable kin DemoKin codes labelled. sex character. \"f\" female, \"m\" male \"2sex\" sex naming.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/rename_kin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rename kin — rename_kin","text":"Add column kin labels input data frame.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/rename_kin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rename kin — rename_kin","text":"See table demokin_codes know label options.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Hxs.html","id":null,"dir":"Reference","previous_headings":"","what":"Age where assign offspring of individuals in each partity stage (Caswell, 2021). All to zero age in this case. — svk_Hxs","title":"Age where assign offspring of individuals in each partity stage (Caswell, 2021). All to zero age in this case. — svk_Hxs","text":"Age assign offspring individuals partity stage (Caswell, 2021). zero age case.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Hxs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age where assign offspring of individuals in each partity stage (Caswell, 2021). All to zero age in this case. — svk_Hxs","text":"","code":"svk_Hxs"},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Hxs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Age where assign offspring of individuals in each partity stage (Caswell, 2021). All to zero age in this case. — svk_Hxs","text":"matrix ones ages assign offspring individuals, stages cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Hxs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Age where assign offspring of individuals in each partity stage (Caswell, 2021). All to zero age in this case. — svk_Hxs","text":"Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Uxs.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of transition among parity stage for Slovakia in 1990, for each age, conditional on survival (Caswell, 2021). — svk_Uxs","title":"Probability of transition among parity stage for Slovakia in 1990, for each age, conditional on survival (Caswell, 2021). — svk_Uxs","text":"Probability transition among parity stage Slovakia 1990, age, conditional survival (Caswell, 2021).","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Uxs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of transition among parity stage for Slovakia in 1990, for each age, conditional on survival (Caswell, 2021). — svk_Uxs","text":"","code":"svk_Uxs"},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Uxs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Probability of transition among parity stage for Slovakia in 1990, for each age, conditional on survival (Caswell, 2021). — svk_Uxs","text":"list column-stochastic matrix probabilities transition among parity stage, age, conditional survival.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_Uxs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Probability of transition among parity stage for Slovakia in 1990, for each age, conditional on survival (Caswell, 2021). — svk_Uxs","text":"Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_fxs.html","id":null,"dir":"Reference","previous_headings":"","what":"Female Slovakian fertility rates by parity stage in 1990 (Caswell, 2021) — svk_fxs","title":"Female Slovakian fertility rates by parity stage in 1990 (Caswell, 2021) — svk_fxs","text":"Female Slovakian fertility rates parity stage 1990 (Caswell, 2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_fxs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female Slovakian fertility rates by parity stage in 1990 (Caswell, 2021) — svk_fxs","text":"","code":"svk_fxs"},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_fxs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female Slovakian fertility rates by parity stage in 1990 (Caswell, 2021) — svk_fxs","text":"matrix fx stages cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_fxs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female Slovakian fertility rates by parity stage in 1990 (Caswell, 2021) — svk_fxs","text":"Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_pxs.html","id":null,"dir":"Reference","previous_headings":"","what":"Female Slovakian survival probabilities by parity stage in 1990 (Caswell, 2021) — svk_pxs","title":"Female Slovakian survival probabilities by parity stage in 1990 (Caswell, 2021) — svk_pxs","text":"Female Slovakian survival probabilities parity stage 1990 (Caswell, 2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_pxs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female Slovakian survival probabilities by parity stage in 1990 (Caswell, 2021) — svk_pxs","text":"","code":"svk_pxs"},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_pxs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female Slovakian survival probabilities by parity stage in 1990 (Caswell, 2021) — svk_pxs","text":"matrix px stages cols ages rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/svk_pxs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female Slovakian survival probabilities by parity stage in 1990 (Caswell, 2021) — svk_pxs","text":"Caswell (2021)","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_Sx.html","id":null,"dir":"Reference","previous_headings":"","what":"Female swedish survival ratios from 1900 to 2015 — swe_Sx","title":"Female swedish survival ratios from 1900 to 2015 — swe_Sx","text":"Female swedish survival ratios 1900 2015","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_Sx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female swedish survival ratios from 1900 to 2015 — swe_Sx","text":"","code":"swe_Sx"},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_Sx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female swedish survival ratios from 1900 to 2015 — swe_Sx","text":"matrix years cols ages (0 100 OAG) rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_Sx.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female swedish survival ratios from 1900 to 2015 — swe_Sx","text":"HMD/HFD","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_asfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Swedish age-specific fertility rates from 1900 to 2015 — swe_asfr","title":"Swedish age-specific fertility rates from 1900 to 2015 — swe_asfr","text":"Swedish age-specific fertility rates 1900 2015","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_asfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swedish age-specific fertility rates from 1900 to 2015 — swe_asfr","text":"","code":"swe_asfr"},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_asfr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Swedish age-specific fertility rates from 1900 to 2015 — swe_asfr","text":"matrix years cols ages (0 100 OAG) rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_asfr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Swedish age-specific fertility rates from 1900 to 2015 — swe_asfr","text":"HMD/HFD","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Female swedish population from 1900 to 2015 — swe_pop","title":"Female swedish population from 1900 to 2015 — swe_pop","text":"Female swedish population 1900 2015","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female swedish population from 1900 to 2015 — swe_pop","text":"","code":"swe_pop"},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_pop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female swedish population from 1900 to 2015 — swe_pop","text":"matrix years cols ages (0 100 OAG) rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_pop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female swedish population from 1900 to 2015 — swe_pop","text":"HMD/HFD","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_px.html","id":null,"dir":"Reference","previous_headings":"","what":"Female swedish survival probabilities from 1900 to 2015 — swe_px","title":"Female swedish survival probabilities from 1900 to 2015 — swe_px","text":"Female swedish survival probabilities 1900 2015","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_px.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Female swedish survival probabilities from 1900 to 2015 — swe_px","text":"","code":"swe_px"},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_px.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Female swedish survival probabilities from 1900 to 2015 — swe_px","text":"matrix years cols ages (0 100 OAG) rows.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/swe_px.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Female swedish survival probabilities from 1900 to 2015 — swe_px","text":"HMD/HFD","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin.html","id":null,"dir":"Reference","previous_headings":"","what":"one time projection kin — timevarying_kin","title":"one time projection kin — timevarying_kin","text":"one time projection kin. internal function.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"one time projection kin — timevarying_kin","text":"","code":"timevarying_kin(Ut, ft, pit, ages, pkin)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"one time projection kin — timevarying_kin","text":"Ut numeric. matrix survival probabilities (ratios). ft numeric. matrix age-specific fertility rates. pit numeric. matrix distribution childbearing. ages numeric. pkin numeric. list kin count distribution previous year.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"one time projection kin — timevarying_kin","text":"list 14 types kin matrices (kin age Focal age) projected one time interval.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex.html","id":null,"dir":"Reference","previous_headings":"","what":"one time projection kin — timevarying_kin_2sex","title":"one time projection kin — timevarying_kin_2sex","text":"one time projection kin. internal function.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"one time projection kin — timevarying_kin_2sex","text":"","code":"timevarying_kin_2sex(Ut, Ft, Ft_star, pit, sex_focal, ages, pkin)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"one time projection kin — timevarying_kin_2sex","text":"Ut numeric. matrix survival probabilities (ratios). Ft numeric. matrix age-specific fertility rates. Ft_star numeric. Ft female fertility. pit numeric. matrix distribution childbearing. sex_focal character. \"f\" female \"m\" male. ages numeric. pkin numeric. list kin count distribution previous year.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"one time projection kin — timevarying_kin_2sex","text":"list 14 types kin matrices (kin age Focal age, blocked two sex) projected one time interval.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex_cod.html","id":null,"dir":"Reference","previous_headings":"","what":"one time projection kin — timevarying_kin_2sex_cod","title":"one time projection kin — timevarying_kin_2sex_cod","text":"one time projection kin. internal function.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex_cod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"one time projection kin — timevarying_kin_2sex_cod","text":"","code":"timevarying_kin_2sex_cod(Ut, Ft, Ft_star, causes, pit, sex_focal, ages, pkin)"},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex_cod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"one time projection kin — timevarying_kin_2sex_cod","text":"Ut numeric. matrix survival probabilities (ratios). Ft numeric. matrix age-specific fertility rates. Ft_star numeric. Ft female fertility. causes integer. Number causes death included. pit numeric. matrix distribution childbearing. sex_focal character. \"f\" female \"m\" male. ages numeric. pkin numeric. list kin count distribution previous year.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/reference/timevarying_kin_2sex_cod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"one time projection kin — timevarying_kin_2sex_cod","text":"list 14 types kin matrices (kin age Focal age, blocked two sex) projected one time interval.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/news/index.html","id":"demokin-103","dir":"Changelog","previous_headings":"","what":"DemoKin 1.0.3","title":"DemoKin 1.0.3","text":"CRAN release: 2023-06-05","code":""},{"path":[]},{"path":[]},{"path":"https://ivanwilli.github.io/DemoKin/news/index.html","id":"demokin-100","dir":"Changelog","previous_headings":"","what":"DemoKin 1.0.0","title":"DemoKin 1.0.0","text":"Added NEWS.md file track changes package. Change stable/non-stable references time varying/non-varying rates. Add multi-state process.","code":""},{"path":"https://ivanwilli.github.io/DemoKin/news/index.html","id":"demokin-101-1","dir":"Changelog","previous_headings":"","what":"DemoKin 1.0.1","title":"DemoKin 1.0.1","text":"Submitted CRAN Death counts placed age Focal experience death. Aggregated kin types allowed (s older younger sisters, example).","code":""}]
